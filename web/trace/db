#!/bin/bash

#trace
trace_usage(){
  echo "trace <\$target_file> <\$output_dir>"
}

trace(){
target_file=$1
output_dir=$2
cwd=$(pwd)
node_name=$(awk -F " *= *" '/node_name/ {print $2}' config.ini)
date=$(date +%Y%m%d-%H:%M:%S)
timestamp=$(date +%s)
out_file=$output_dir/$date"."$node_name".warts"
log_file=$output_dir/$date"."$node_name".log"
mark_file=$output_dir/$date"."$node_name".mark"

nohup scamper -c 'trace' -p 10000 -M $node_name -C $timestamp -o $out_file -O warts -f $target_file >$log_file 2>&1 &
test ! -z "$(ps -ef | grep -v grep | grep -e "scamper.*$node_name.*$timestamp.*$out_file.*$target_file")" && python -c "import json; d={}; d['status']=0; d['target_file']='$target_file'; d['date']='$date'; d['out_file']='$out_file'; print json.dumps(d);" \
|| python -c "import json; d={}; d['status']=-1; d['log']=open('$log_file','rb').read(); print json.dumps(d);"

bash -c "while true; do test -z \"\$(ps -ef | grep -v grep | grep -e \"scamper.*$node_name.*$timestamp.*$out_file.*$target_file\")\" && touch $mark_file && exit; sleep 10; done" >/dev/null 2>&1 &
}

#check
check_usage(){
  echo "check <\$output_dir>"
}

check(){
output_dir=$1
ls $output_dir | grep -v "target" | cut -d'.' -f1,2 | uniq -c | xargs | python <(
cat << "EOF"
tl=raw_input().split()
for i in range(0,len(tl),2):
  print tl[i+1],tl[i] 
EOF
) | grep ".* 3$" | cut -d' ' -f1
}

#list
list_usage(){
  echo "list <\$output_dir>"
}

list(){
output_dir=$1
ls $output_dir | grep -v "target" | cut -d'.' -f1,2 | uniq -c | xargs | python -c "import json; d={}; tl=raw_input().split(); task_list=[(tl[i+1],int(tl[i])) for i in range(0,len(tl),2)]; d['status']=0; d['task_list']=task_list; d['output_dir']='$output_dir'; print json.dumps(d);"
}

#remove
remove_usage(){
  echo "remove <\$output_dir> <\$id_list>"
}

remove(){
output_dir=$1
id_list=$2
echo $id_list | python <(
cat << "EOF"
import json
obj=json.loads(raw_input())
for i in obj:
  print i
EOF
) | while read id; do if ls $output_dir/$id.[a-z]* >/dev/null 2>&1; then ls $output_dir/$id.[a-z]*; fi; done | xargs -I {} rm {}
python -c "import json; d={}; d['status']=0; print json.dumps(d);"
}

#main
usage(){
  echo "db <\$operation> [\$args...]"
  echo "operations:"
  echo "  trace"
  echo "  check"
  echo "  list"
  echo "  remove"
}

test $# -lt 1 && usage && exit

OP=$1
case $OP in
  "trace")
    test $# -lt 3 && trace_usage && exit
    trace $2 $3
    ;;
  "list")
    test $# -lt 2 && list_usage && exit
    list $2
    ;;
  "check")
    test $# -lt 2 && check_usage && exit
    check $2
    ;;
  "remove")
    test $# -lt 3 && remove_usage && exit
    remove $2 $3
    ;;
esac
